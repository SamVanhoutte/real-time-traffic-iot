{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solution_name":{
            "defaultValue": "traffic",
            "type": "String"
        }
    },
    "variables": {
        "site_name": "[concat(parameters('solution_name'),'')]",
        "serverfarm_plan_name": "WestEuropePlan",
        "appinsights_components_name": "[concat(parameters('solution_name'),'-insights')]",
        "config_web_name": "web",
        "iot_hub_name": "[concat(parameters('solution_name'),'-iothub')]",
        "storageaccount_name": "[parameters('solution_name')]",
        "hostname_bindings": "[concat(parameters('solution_name'),'.azurewebsites.net')]",
        "event_grid_connection_name": "azureeventgrid",
        "event_grid_topic_name": "[concat(parameters('solution_name'),'-eventgrid')]",
        "event_hub_namespace": "[string(concat(parameters('solution_name'),'-eventhub'))]",
        "event_hub_speed_averages_name": "speed-averages",
        "event_hub_speed_events_name": "traffic-speed-events",
        "event_hub_suspects_name": "traffic-suspects",
        "event_hub_authrule_timeseries": "timeseries",
        "event_hub_authrule_root": "RootManageSharedAccessKey",
        "event_hub_cg_dashboard": "dashboard",
        "event_hub_cg_timeseries": "timeseries",
        "event_hub_cg_default": "$Default",
        "logic_app_speedticket_creation": "traffic-speedticket-creation",
        "logic_app_suspectedcar_alerting": "traffic-suspectedcar-detection"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 3
            },
            "name": "[string(variables('iot_hub_name'))]",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "operationsMonitoringProperties": {
                    "events": {
                        "None": "None",
                        "Connections": "None",
                        "DeviceTelemetry": "None",
                        "C2DCommands": "None",
                        "DeviceIdentityOperations": "None",
                        "FileUploadOperations": "None",
                        "Routes": "None"
                    }
                },
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "[variables('iot_hub_name')]",
                        "endpoint": "sb://iothub-ns-savanh-tra-1175501-34f5efed53.servicebus.windows.net/ TODO"
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "[concat(variables('iot_hub_name'),'-operationmonitoring')]",
                        "endpoint": "sb://iothub-ns-savanh-tra-1175501-34f5efed53.servicebus.windows.net/ TODO"
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": [],
                        "comment": [
                            {
                                "connectionString": "DefaultEndpointsProtocol=https;AccountName=savanhtraffic;AccountKey=****TODO",
                                "containerName": "traffic-telemetry",
                                "fileNameFormat": "{iothub}-{partition}-{YYYY}-{MM}/{DD}-{HH}-{mm}",
                                "batchFrequencyInSeconds": 200,
                                "maxChunkSizeInBytes": 104857600,
                                "encoding": "avro",
                                "name": "traffic-telemetry",
                                "subscriptionId": "[subscription().subscriptionId]",
                                "resourceGroup": "savanh-real-time-iot"
                            }
                        ]
                    },
                    "routes": [],
                    "comments": [
                        {
                            "name": "telemetry-to-blob",
                            "source": "DeviceMessages",
                            "condition": "true",
                            "endpointNames": [
                                "traffic-telemetry"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "",
                        "containerName": ""
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.EventGrid/topics",
            "name": "[string(variables('event_grid_topic_name'))]",
            "apiVersion": "2018-01-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[string(variables('event_hub_namespace'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            },
            "dependsOn": []
        },
        {
            "comments": "remove this ? todo",
            "type": "microsoft.insights/components",
            "kind": "web",
            "name": "[string(variables('appinsights_components_name'))]",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "Application_Type": "web",
                "Flow_Type": null,
                "Request_Source": "IbizaWebAppExtensionCreate",
                "HockeyAppId": null,
                "SamplingPercentage": null
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[string(variables('logic_app_speedticket_creation'))]",
            "apiVersion": "2017-07-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Traffic.SpeedingCar"
                                            ]
                                        },
                                        "topic": "/subscriptions/@{encodeURIComponent(subscription().subscriptionId)}/resourceGroups/@{encodeURIComponent(resourceGroup().name)}/providers/Microsoft.EventGrid/topics/@{concat(parameters('solution_name'),'-eventgrid')}"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "azureeventgrid"
                                    }
                                },
                                "path": "/subscriptions/@{encodeURIComponent(subscription().subscriptionId)}/providers/@{encodeURIComponent('Microsoft.EventGrid.Topics')}/resource/eventSubscriptions",
                                "queries": {
                                    "subscriptionName": "speedticket-creation-subscription",
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('event_grid_connection_name'))]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', variables('event_grid_topic_name'))]",
                "[resourceId('Microsoft.Web/connections', variables('event_grid_connection_name'))]"
            ]
        },
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[string(variables('logic_app_suspectedcar_alerting'))]",
            "apiVersion": "2017-07-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Traffic.SuspectedCar"
                                            ]
                                        },
                                        "topic": "/subscriptions/@{encodeURIComponent(subscription().subscriptionId)}/resourceGroups/@{encodeURIComponent(resourceGroup().name)}/providers/Microsoft.EventGrid/topics/@{concat(parameters('solution_name'),'-eventgrid')}"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "azureeventgrid"
                                    }
                                },
                                "path": "/subscriptions/@{encodeURIComponent(subscription().subscriptionId)}/providers/@{encodeURIComponent('Microsoft.EventGrid.Topics')}/resource/eventSubscriptions",
                                "queries": {
                                    "subscriptionName": "suspectedcar-detection-subscription",
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('event_grid_connection_name'))]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', variables('event_grid_topic_name'))]",
                "[resourceId('Microsoft.Web/connections', variables('event_grid_connection_name'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[variables('storageaccount_name')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/connections",
            "name": "[variables('event_grid_connection_name')]",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "displayName": "sam.vanhoutte@marchitec.be//TODO",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', variables('event_grid_connection_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "name": "[variables('serverfarm_plan_name')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "name": "[variables('serverfarm_plan_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[variables('site_name')]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('site_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('site_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_plan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_plan_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_authrule_root'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_events_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_events_name'), '/', variables('event_hub_cg_default'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_speed_events_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_events_name'), '/', variables('event_hub_cg_dashboard'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_speed_events_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_events_name'), '/', variables('event_hub_cg_timeseries'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_speed_events_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_suspects_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_averages_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 4,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_suspects_name'), '/', variables('event_hub_cg_default'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_suspects_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_averages_name'), '/', variables('event_hub_authrule_timeseries'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "rights": [
                    "Manage",
                    "Listen",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_speed_averages_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(variables('event_hub_namespace'), '/', variables('event_hub_speed_averages_name'), '/', variables('event_hub_cg_default'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('event_hub_namespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('event_hub_namespace'), variables('event_hub_speed_averages_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('site_name'), '/', variables('config_web_name'))]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$savanh-traffic",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "scmIpSecurityRestrictions": null,
                "scmIpSecurityRestrictionsUseMain": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('site_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(variables('site_name'), '/', variables('hostname_bindings'))]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "siteName": "savanh-traffic",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('site_name'))]"
            ]
        }
    ]
}